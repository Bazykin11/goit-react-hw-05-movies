{"version":3,"file":"static/js/415.61c4b46b.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACCF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD1C,cACjBE,EADiB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAMXC,EAAkB,mCAAG,WAAOC,GAAP,uFACTP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,EAAlC,oBADS,cAC1BE,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,sDAMlBI,EAAa,mCAAG,WAAOD,GAAP,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA0CN,EAA1C,oBADI,cACrBE,EADqB,yBAEpBA,EAASC,KAAKK,MAFM,2CAAH,sDAKbC,EAAY,mCAAG,WAAMH,GAAN,uFACHP,EAAAA,EAAAA,IAAA,iBACXO,EADW,4BACWN,EADX,oBADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAQZM,EAAU,mCAAG,WAAMC,GAAN,uFACDZ,EAAAA,EAAAA,IAAA,gCACIC,EADJ,iCACoCW,IAFnC,cAClBT,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qD,0GCxBVQ,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEf,OADAC,QAAQC,IAAIJ,IAEV,SAACK,EAAD,UACGL,EAAOM,KAAI,SAAAC,GAAK,OACf,SAACC,EAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMd,IAAMiB,MAAO,CAAEC,KAAMV,GAAhD,WACE,gBACEW,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aACxC,4DAENC,IAAI,eACJC,MAAM,MACNC,OAAO,SAET,uBAAIT,EAAMU,YAZHV,EAAMd,GADF,KAqBxB,EAMKY,EAAOa,EAAAA,EAAAA,GAAH,gMASJV,EAAOU,EAAAA,EAAAA,GAAH,kM,4KCzCK,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KACC,GAA4BD,EAAAA,EAAAA,WAAS,GAArC,eAAOE,EAAP,KAAeC,EAAf,KAoBD,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBpC,EAAAA,EAAAA,MAFzB,UAG0B,KADhBY,EAFV,QAGeyB,OAHf,yCAIaC,MAAM,qBAJnB,OAMML,EAAUrB,GANhB,yDASIG,QAAQC,IAAR,MATJ,yBAWImB,GAAU,GAXd,8EADc,uBAAC,WAAD,wBAedI,EACD,GAAE,KAGD,6BACE,SAACC,EAAD,6BACC5B,IAAU,SAAC,IAAD,CAAYA,OAAQA,IAC9BsB,IAAU,SAAC,IAAD,MAGhB,CAID,IAAMM,EAAQV,EAAAA,EAAAA,IAAH,6G","sources":["components/API/apiService.jsx","components/MoviesList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '937968fc5e907db2565b1416fc4a5859';\n\nexport const fetchTrends = async () => {\n    const response  = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n\nexport const fetchTrendsDetails = async (id) => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response.data\n}\n\n\nexport const fetchCastInfo = async (id) => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return response.data.cast\n}\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\n\nexport const movieSeach = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data.results;\n};","import styled from \"@emotion/styled\";\nimport { Link, useLocation } from 'react-router-dom';\n\n\n\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n    console.log(movies);\n    return (\n      <List>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <img\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n                    : 'https://via.placeholder.com/278x417?text=Poster+Not+Found'\n                }\n                alt=\"movie.title}\"\n                width=\"200\"\n                height=\"300\"\n              />\n              <p>{movie.title}</p>\n            </Link>\n          </Item>\n        ))}\n      </List>\n    );\n\n\n};\n\n\n\n/////////////////////\n\nconst List = styled.ul`\n  padding-left: 50px;\n  list-style: none;\n  line-height: 1,5;\n  display: grid;\n  grid-template-columns: repeat(4, 250px);\n  grid-template-rows: repeat(4, 400px);\n`;\n\nconst Item = styled.li`\n  a {\n    text-decoration: none;\n    color: black;\n  }\n  background-color: #bbbbbb69;\n  border-radius: 5px;\n  margin: 3px;\n  text-align: center;\n  padding: 10px;\n`;\n\n","import styled from '@emotion/styled';\nimport { fetchTrends } from 'components/API/apiService';\nimport { Loader } from 'components/Loader';\nimport { MoviesList } from 'components/MoviesList';\nimport { useState, useEffect } from 'react';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n   const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    async function getTrends() {\n      try {\n        const movies = await fetchTrends();\n        if (movies.length === 0) {\n          return alert(`Movies not found`);\n        } else {\n          setMovies(movies);\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    getTrends();\n  }, []);\n\n  return (\n    <main>\n      <Title>Trending today</Title>\n      {movies && <MoviesList movies={movies} />}\n      {loader && <Loader />}\n    </main>\n  );\n}\n\n//////////////////style///////////\n\nconst Title = styled.div`\n  font-weight: 700;\n  font-size: 30px;\n  text-align: center;\n  padding-top: 20px;\n`;\n"],"names":["axios","API_KEY","fetchTrends","response","data","results","fetchTrendsDetails","id","fetchCastInfo","cast","fetchReviews","movieSeach","query","MoviesList","movies","location","useLocation","console","log","List","map","movie","Item","to","state","from","src","poster_path","alt","width","height","title","styled","Home","useState","setMovies","loader","setLoader","useEffect","length","alert","getTrends","Title"],"sourceRoot":""}