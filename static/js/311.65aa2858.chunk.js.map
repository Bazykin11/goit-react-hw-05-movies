{"version":3,"file":"static/js/311.65aa2858.chunk.js","mappings":"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","sources":["components/API/apiService.jsx","components/MoviesList.jsx","components/SeachBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '937968fc5e907db2565b1416fc4a5859';\n\nexport const fetchTrends = async () => {\n    const response  = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n\nexport const fetchTrendsDetails = async (id) => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response.data\n}\n\n\nexport const fetchCastInfo = async (id) => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return response.data.cast\n}\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\n\nexport const movieSeach = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data.results;\n};","import styled from \"@emotion/styled\";\nimport { Link, useLocation } from 'react-router-dom';\n\n\n\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  \n    return (\n      <List>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <img\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n                    : 'https://via.placeholder.com/278x417?text=Poster+Not+Found'\n                }\n                alt=\"movie.title}\"\n                width=\"200\"\n                height=\"300\"\n              />\n              <p>{movie.title}</p>\n            </Link>\n          </Item>\n        ))}\n      </List>\n    );\n\n\n};\n\n\n\n/////////////////////\n\nconst List = styled.ul`\n  padding-left: 50px;\n  list-style: none;\n  line-height: 1,5;\n  display: grid;\n  grid-template-columns: repeat(4, 250px);\n  grid-template-rows: repeat(4, 400px);\n`;\n\nconst Item = styled.li`\n  a {\n    text-decoration: none;\n    color: black;\n  }\n  background-color: #bbbbbb69;\n  border-radius: 5px;\n  margin: 3px;\n  text-align: center;\n  padding: 10px;\n`;\n\n","import styled from '@emotion/styled';\nimport { useState } from 'react';\n\n\n\nexport const Form = ({ onSubmit }) => {\n    const [query, setQuery] = useState('');\n\n      const onFormSubmit = e => {\n        e.preventDefault();\n        const searchQuery = query.toLowerCase().trim();\n        if (searchQuery === '') {\n          return alert(\"It cannot be empty query! Example: 'Batman'!\");\n        }\n        onSubmit(searchQuery);\n        setQuery('');\n      };\n\n  return (\n    <FormStyled onSubmit={onFormSubmit}>\n      <Input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <BtnStyled>Seach</BtnStyled>\n    </FormStyled>\n  );\n};\n\n\n\n//////////////styled//////////\n\n\nconst Input = styled.input`\njustify-content: center;\npadding: 5px;\nwidth: 300px;\nmargin-right: 10px;\njustify-content: center;\n`\n\nconst FormStyled = styled.form`\n  text-align: center;\n  padding-top: 20px;\n`\n\nconst BtnStyled = styled.button`\n  padding: 5px;\n  background-color: inherit;\n  border-radius: 10px;\n  border: 1px solid #ff6702;\n  :hover {\n    background-color: #ff6702;\n  }\n`;","// import styled from \"@emotion/styled\";\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { movieSeach } from 'components/API/apiService';\nimport { MoviesList } from 'components/MoviesList';\nimport { Form } from \"components/SeachBox\";\nimport { Loader } from 'components/Loader';\n\nexport default function Movies() {\n  const [movie, setMovie] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loader, setLoader] = useState(false);\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    async function fetchMovie() {\n      try {\n        const movie = await movieSeach(searchQuery);\n        if (movie.length === 0) {\n          return;\n        }\n        setMovie(movie);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    setLoader(true)\n    fetchMovie();\n  }, [searchQuery]);\n\n  return (\n    <>\n      <main>\n        <Form onSubmit={updateQueryString} />\n        {movie && <MoviesList movies={movie} />}\n      </main>\n      {loader && <Loader />}\n    </>\n  );\n};\n\n\n\n\n\n"],"names":["axios","API_KEY","fetchTrends","response","data","results","fetchTrendsDetails","id","fetchCastInfo","cast","fetchReviews","movieSeach","query","MoviesList","movies","location","useLocation","List","map","movie","Item","to","state","from","src","poster_path","alt","width","height","title","styled","Form","onSubmit","useState","setQuery","FormStyled","e","preventDefault","searchQuery","toLowerCase","trim","alert","Input","type","autoComplete","autoFocus","placeholder","value","onChange","target","BtnStyled","Movies","setMovie","useSearchParams","searchParams","setSearchParams","loader","setLoader","get","useEffect","length","console","log","fetchMovie","Loader"],"sourceRoot":""}