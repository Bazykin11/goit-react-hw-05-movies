{"version":3,"file":"static/js/613.0ca55d9b.chunk.js","mappings":"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","sources":["components/API/apiService.jsx","components/MovieCard.jsx","components/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '937968fc5e907db2565b1416fc4a5859';\n\nexport const fetchTrends = async () => {\n    const response  = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n\nexport const fetchTrendsDetails = async (id) => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response.data\n}\n\n\nexport const fetchCastInfo = async (id) => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return response.data.cast\n}\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\n\nexport const movieSeach = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data.results;\n};","import styled from '@emotion/styled';\n\nexport const MovieCard = ({ poster, title, year, vote, overview, genres }) => {\n  return (\n    <MovieCardWrapper>\n      <CardImg src={poster} alt={title} width=\"200\" />\n      <div>\n        <h2>\n          {title} ({year})\n        </h2>\n        <p>Score: {vote}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres}</p>\n      </div>\n    </MovieCardWrapper>\n  );\n};\n\n/////////////////STYLE///////////\n\nconst MovieCardWrapper = styled.div`\n  display: flex;\n  padding-left: 30px;\n  border-bottom: 1px solid #6564646a;\n`;\n\nconst CardImg = styled.img`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  margin-right: 20px;\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport {\n  useParams,\n  NavLink,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { fetchTrendsDetails } from './API/apiService';\nimport { MovieCard } from 'components/MovieCard';\nimport styled from '@emotion/styled';\nimport { Loader } from './Loader';\n\nexport default function MoviesDetails() {\n  const [movieDetails, setMovieDetails] = useState({\n    backdrop_path: '',\n    genres: [],\n    overview: '',\n    poster_path: '',\n    release_date: '',\n    title: '',\n    vote_average: '',\n  });\n   const [loader, setLoader] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieDetailsCard() {\n      try {\n        const movieDetails = await fetchTrendsDetails(movieId);\n        if (Object.keys(movieDetails).length === 0) {\n          return alert('Sorry, movie not found! Please try again later');\n        }\n        setMovieDetails(movieDetails);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    fetchMovieDetailsCard();\n  }, [movieId]);\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieDetails;\n\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : 'https://via.placeholder.com/200x300?text=Poster+Not+Found';\n  const year = release_date.slice(0, 4);\n  const vote = Math.floor(vote_average * 10);\n  const movieGenres = genres.map(genre => genre.name).join(', ');\n\n  // ------ Go back button-------///\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n  const navigate = useNavigate();\n  const onGoBack = () => navigate(backLink);\n  // --------------------------////\n\n  return (\n    <>\n      <main>\n        <BackBtn type=\"button\" onClick={onGoBack}>\n          Back to\n        </BackBtn>\n        {movieDetails && (\n          <MovieCard\n            title={title}\n            year={year}\n            poster={poster}\n            vote={vote}\n            overview={overview}\n            genres={movieGenres}\n          />\n        )}\n        <InfoWrapp>\n          <InfoTitle>Addditional information</InfoTitle>\n          <ul>\n            <LinkWrapp to=\"cast\">Cast</LinkWrapp>\n            <LinkWrapp to=\"reviews\">Reviews</LinkWrapp>\n          </ul>\n        </InfoWrapp>\n        \n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </main>\n      {loader && <Loader />}\n    </>\n  );\n}\n\n///////////////styled/////\n\nconst LinkWrapp = styled(NavLink)`\n  margin-right: 10px;\n  margin-bottom: 10px;\n  padding: 10px;\n  background-color: #ff6702;\n  border-radius: 5px;\n  text-decoration: none;\n  color: #fff;\n  text-align: center;\n  :hover {\n    background-color: #fff;\n    color: #000;\n    border: 1px solid #000;\n  }\n`;\n\nconst InfoTitle = styled.h3`\n  padding-left: 20px;\n`;\n\nconst InfoWrapp = styled.div`\n  border-bottom: 1px solid #6564646a;\n`;\n\n\nconst BackBtn = styled.button`\n  background-color: inherit;\n  border-radius: 5px;\n  margin-left: 30px;\n  margin-top: 15px;\n  border: 1px solid #ff6702;\n  :hover {\n    background-color: #ff6702;\n  }\n`;"],"names":["axios","API_KEY","fetchTrends","response","data","results","fetchTrendsDetails","id","fetchCastInfo","cast","fetchReviews","movieSeach","query","MovieCard","poster","title","year","vote","overview","genres","MovieCardWrapper","CardImg","src","alt","width","styled","MoviesDetails","useState","backdrop_path","poster_path","release_date","vote_average","movieDetails","setMovieDetails","loader","setLoader","movieId","useParams","useEffect","Object","keys","length","alert","console","log","fetchMovieDetailsCard","slice","Math","floor","movieGenres","map","genre","name","join","backLink","useLocation","state","from","navigate","useNavigate","BackBtn","type","onClick","InfoWrapp","InfoTitle","LinkWrapp","to","Suspense","fallback","Loader","NavLink"],"sourceRoot":""}