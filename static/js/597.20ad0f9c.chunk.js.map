{"version":3,"file":"static/js/597.20ad0f9c.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACCF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD1C,cACjBE,EADiB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAMXC,EAAkB,mCAAG,WAAOC,GAAP,uFACTP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,EAAlC,oBADS,cAC1BE,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,sDAMlBI,EAAa,mCAAG,WAAOD,GAAP,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA0CN,EAA1C,oBADI,cACrBE,EADqB,yBAEpBA,EAASC,KAAKK,MAFM,2CAAH,sDAKbC,EAAY,mCAAG,WAAMH,GAAN,uFACHP,EAAAA,EAAAA,IAAA,iBACXO,EADW,4BACWN,EADX,oBADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAQZM,EAAU,mCAAG,WAAMC,GAAN,uFACDZ,EAAAA,EAAAA,IAAA,gCACIC,EADJ,iCACoCW,IAFnC,cAClBT,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qD,8KCtBR,SAASQ,IACpB,OAA8CC,EAAAA,EAAAA,UAAS,IAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACF,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBN,OAnBFE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE0Bf,EAAAA,EAAAA,IAAca,GAFxC,UAG2B,KADfG,EAFZ,QAGgBC,OAHhB,uBAIQP,GAAS,GAJjB,kBAKaQ,MAAM,yDALnB,OAOIV,EAAmBQ,GAPvB,kDASIG,QAAQC,IAAR,MATJ,yBAWIR,GAAU,GAXd,8EADc,uBAAC,WAAD,wBAedS,EACD,GAAE,CAACR,KAIA,iCACI,SAACS,EAAD,UACGf,EAAgBgB,KAAI,SAAAtB,GAAI,OACvB,SAACuB,EAAD,WACE,4BACE,gBACEC,IACExB,EAAKyB,aAAL,yCACsCzB,EAAKyB,cACvC,2DAENC,IAAK1B,EAAK2B,KACVC,MAAM,SAER,wBAAK5B,EAAK2B,QACV,uBAAI3B,EAAK6B,gBAZE7B,EAAK8B,QADG,MAkB5BtB,IAAS,8DACTE,IAAU,SAAC,IAAD,MAGlB,CAOD,IAAMW,EAAWU,EAAAA,EAAAA,GAAH,iLASRR,EAAWQ,EAAAA,EAAAA,GAAH,4J","sources":["components/API/apiService.jsx","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '937968fc5e907db2565b1416fc4a5859';\n\nexport const fetchTrends = async () => {\n    const response  = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n\nexport const fetchTrendsDetails = async (id) => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response.data\n}\n\n\nexport const fetchCastInfo = async (id) => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return response.data.cast\n}\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\n\nexport const movieSeach = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data.results;\n};","import styled from '@emotion/styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastInfo } from './API/apiService';\nimport { Loader } from './Loader';\n\n\n\nexport default function Cast() {\n    const [castInfoDetails, setCastInfoDetails] = useState([]);\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function castDetais() {\n      try {\n          const casts = await fetchCastInfo(movieId);\n          if (casts.length === 0) {\n            setError(true);\n          return alert('There is no information about the actors of the film');\n        }\n        setCastInfoDetails(casts);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    castDetais();\n  }, [movieId]);\n    \n    \n    return (\n      <>\n          <CastList>\n            {castInfoDetails.map(cast => (\n              <CastItem key={cast.cast_id}>\n                <div>\n                  <img\n                    src={\n                      cast.profile_path\n                        ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                        : 'https://via.placeholder.com/100x150?text=Photo+Not+Found'\n                    }\n                    alt={cast.name}\n                    width=\"100\"\n                  />\n                  <h2>{cast.name}</h2>\n                  <p>{cast.character}</p>\n                </div>\n              </CastItem>\n            ))}\n        </CastList>\n        {error && <p>We don't have cast for this movie </p>}\n        {loader && <Loader />}\n      </>\n    );\n}\n\n\n\n//////////////STYLE/////////\n\n\nconst CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(7, 170px);\n  grid-template-rows: repeat(7, 300px);\n  justify-content: center;\n  padding-left: 0px;\n`;\n\n\nconst CastItem = styled.li`\n  list-style: none;\n  background-color: #bbbbbb69;\n  border-radius: 5px;\n  margin: 3px;\n  text-align: center;\n  padding: 10px;\n`;"],"names":["axios","API_KEY","fetchTrends","response","data","results","fetchTrendsDetails","id","fetchCastInfo","cast","fetchReviews","movieSeach","query","Cast","useState","castInfoDetails","setCastInfoDetails","error","setError","loader","setLoader","movieId","useParams","useEffect","casts","length","alert","console","log","castDetais","CastList","map","CastItem","src","profile_path","alt","name","width","character","cast_id","styled"],"sourceRoot":""}