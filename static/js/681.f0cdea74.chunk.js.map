{"version":3,"file":"static/js/681.f0cdea74.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACCF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD1C,cACjBE,EADiB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAMXC,EAAkB,mCAAG,WAAOC,GAAP,uFACTP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,EAAlC,oBADS,cAC1BE,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,sDAMlBI,EAAa,mCAAG,WAAOD,GAAP,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA0CN,EAA1C,oBADI,cACrBE,EADqB,yBAEpBA,EAASC,KAAKK,MAFM,2CAAH,sDAKbC,EAAY,mCAAG,WAAMH,GAAN,uFACHP,EAAAA,EAAAA,IAAA,iBACXO,EADW,4BACWN,EADX,oBADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAQZM,EAAU,mCAAG,WAAMC,GAAN,uFACDZ,EAAAA,EAAAA,IAAA,gCACIC,EADJ,iCACoCW,IAFnC,cAClBT,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qD,4KCxBR,SAASQ,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OApBAE,EAAAA,EAAAA,YAAU,WAAM,wCAGd,8GAEyBb,EAAAA,EAAAA,IAAaW,GAFtC,UAG0B,KADhBG,EAFV,QAGeC,OAHf,uBAIMP,GAAS,GAJf,kBAKaQ,MAAM,8BALnB,OAOIV,EAAWQ,GAPf,kDASIG,QAAQC,IAAR,MATJ,yBAWIR,GAAU,GAXd,8EAHc,sBACdA,GAAU,GACVO,QAAQC,IAAI,SAFE,mCAiBdC,EACD,GAAE,CAACR,KAGF,iCACI,SAACS,EAAD,UACGf,EAAQgB,KAAI,SAAAP,GAAM,OACjB,2BACE,qCAAaA,EAAOQ,WACpB,uBAAIR,EAAOS,YAFJT,EAAOjB,GADC,MAOtBU,IAAS,gEACTE,IAAU,SAAC,IAAD,MAGhB,CAGD,IAAMW,EAAcI,EAAAA,EAAAA,GAAH,4C","sources":["components/API/apiService.jsx","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '937968fc5e907db2565b1416fc4a5859';\n\nexport const fetchTrends = async () => {\n    const response  = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n\nexport const fetchTrendsDetails = async (id) => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response.data\n}\n\n\nexport const fetchCastInfo = async (id) => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return response.data.cast\n}\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\n\nexport const movieSeach = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return response.data.results;\n};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from './API/apiService';\nimport styled from '@emotion/styled';\nimport { Loader } from './Loader';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoader(true);\n    console.log('hello');\n    async function reviewsInfo() {\n      try {\n        const review = await fetchReviews(movieId);\n        if (review.length === 0) {\n          setError(true);\n          return alert('No reviews for this movie');\n        }\n        setReviews(review);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    reviewsInfo();\n  }, [movieId]);\n\n  return (\n    <>\n        <ReviewsList>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h2>Author: {review.author}</h2>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ReviewsList>\n      {error && <p>We don't have review for this movie </p>}\n      {loader && <Loader />}\n    </>\n  );\n}\n\n\nconst ReviewsList = styled.ul`\n  list-style: none;\n`"],"names":["axios","API_KEY","fetchTrends","response","data","results","fetchTrendsDetails","id","fetchCastInfo","cast","fetchReviews","movieSeach","query","Reviews","useState","reviews","setReviews","error","setError","loader","setLoader","movieId","useParams","useEffect","review","length","alert","console","log","reviewsInfo","ReviewsList","map","author","content","styled"],"sourceRoot":""}